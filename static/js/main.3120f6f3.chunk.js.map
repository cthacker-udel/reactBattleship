{"version":3,"sources":["index.js"],"names":["Board","props","useState","theCompGuesses","theGuesses","theColor","setColor","printOut","event","guess","target","name","console","log","theHitsArr","length","includes","document","getElementById","innerHTML","updateHits","numHits","updateHitArr","concat","updateMisses","numMisses","generateSpace","theName","variant","onClick","id","spaces","striped","bordered","hover","size","style","textAlign","height","NavigationButton","show","setShow","margin","display","onHide","scroll","Header","closeButton","Title","Body","href","MainPage","options","compGuess","Math","floor","random","computerGuess","misses","setMisses","hits","setHits","sank","setSank","hitsArr","setHitsArr","theOptions","updateSank","numSank","bg","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3120f6f3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nfunction Board(props){\r\n\r\n    const [theGuesses,setTestState] = useState(props.theCompGuesses);\r\n\r\n    const [theColor,setColor] = useState('outline-primary');\r\n\r\n    const printOut = (event) => {\r\n\r\n        //console.log(event.target.name); // acquire button name that is pressed\r\n\r\n        let guess = event.target.name;\r\n        console.log(`guesses2 = ${theGuesses}`);\r\n        console.log(`the hits arr = ${props.theHitsArr}`);\r\n        if(props.theHitsArr.length === theGuesses.length){\r\n            console.log(`setting buttons to success`);\r\n            setColor(\"success\");\r\n        }\r\n        else if(props.theHitsArr.includes(guess)){\r\n            // has already been hit\r\n            return;\r\n        }\r\n        else if(theGuesses.includes(guess)){\r\n            // valid hit\r\n            console.log(`hit!`);\r\n            document.getElementById(guess).innerHTML = \"HIT\";\r\n            props.updateHits(props.numHits+1);\r\n            props.updateHitArr(props.theHitsArr.concat(guess));\r\n            console.log(`the hits arr = ${props.theHitsArr}`);\r\n        }\r\n        else{\r\n            console.log(`miss!`);\r\n            document.getElementById(guess).innerHTML = \"MISS\";\r\n            props.updateMisses(props.numMisses+1);\r\n        }\r\n        \r\n    }\r\n\r\n    const generateSpace = (theName) => {\r\n\r\n        return(\r\n\r\n            <Button name={theName} variant={theColor} onClick={printOut} id={theName}>{theName}</Button>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    const [spaces,setSpaces] = useState(props['theOptions']);\r\n    const [computerChoices,setComputerChoices] = useState('');\r\n\r\n    return(\r\n\r\n        <>\r\n\r\n        <Table striped bordered hover size=\"sm\" id=\"battleshiptable\">\r\n\r\n            <thead>\r\n                <tr style={{textAlign: \"center\"}}>\r\n                    <th>A</th>\r\n                    <th>B</th>\r\n                    <th>C</th>\r\n                    <th>D</th>\r\n                    <th>E</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{textAlign: \"center\"}}>\r\n                <tr style={{height: \"200px\"}}>\r\n                    <td>\r\n                        {generateSpace(spaces[0][0])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[0][1])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[0][2])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[0][3])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[0][4])}\r\n                    </td>\r\n                </tr>\r\n                <tr style={{height: \"200px\"}}>\r\n                    <td>\r\n                        {generateSpace(spaces[1][0])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[1][1])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[1][2])}\r\n                    </td>\r\n                    <td>    \r\n                        {generateSpace(spaces[1][3])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[1][4])}\r\n                    </td>\r\n                </tr>\r\n                <tr style={{height: \"200px\"}}>\r\n                    <td>\r\n                        {generateSpace(spaces[2][0])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[2][1])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[2][2])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[2][3])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[2][4])}\r\n                    </td>\r\n                </tr>\r\n                <tr style={{height: \"200px\"}}>\r\n                    <td>\r\n                        {generateSpace(spaces[3][0])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[3][1])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[3][2])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[3][3])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[3][4])}\r\n                    </td>\r\n                </tr>\r\n                <tr style={{height: \"200px\"}}>\r\n                    <td>\r\n                        {generateSpace(spaces[4][0])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[4][1])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[4][2])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[4][3])}\r\n                    </td>\r\n                    <td>\r\n                        {generateSpace(spaces[4][4])}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </Table>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nfunction NavigationButton(){\r\n\r\n    const [show,setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    return(\r\n\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow} style={{margin: \"auto\", display: \"block\", textAlign: \"center\"}}>\r\n                Main Menu\r\n            </Button>\r\n\r\n            <Offcanvas show={show} onHide={handleClose} scroll={true}>\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>Main Menu</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n\r\n                <Offcanvas.Body>\r\n\r\n                    <a href=\"index.html\">Back to Main Page</a>\r\n                    <br />\r\n                    <a href=\"poker.jsx\">To Poker</a>\r\n                    <br />\r\n                    <a href=\"calculator.jsx\">Calculator</a>\r\n                    <br />\r\n                    <a href=\"bootstrapreview.html\">Bootstrap Review</a>\r\n                    <br />\r\n                    <a href=\"fullreviews.html\">Full reviews - Week 1</a>\r\n\r\n                </Offcanvas.Body>\r\n\r\n            </Offcanvas>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nfunction MainPage(){\r\n\r\n    const theChoices = [['A1','B1','C1','D1','E1'],['A2','B2','C2','D2','E2'],['A3','B3','C3','D3','E3'],['A4','B4','C4','D4','E4'],['A5','B5','C5','D5','E5']];\r\n\r\n    const [options,setOptions] = useState(theChoices);\r\n    const [turn,setTurn] = useState(true); // user goes first if true\r\n\r\n    // get computer guesses\r\n\r\n    // default to 5 guesses <--- may add difficulty functionality later on (reset board, regenerate guesses) also perhaps add customizable functionality such as \r\n    // the user determining the board size rather than default 5x5, also maybe add implementation so instead of picking 5 random points separately, they are conjoined\r\n    // together to form a \"ship\"\r\n\r\n    // really odd behavior when using random numbers, they would change from here to being passed to the board, unsure why, and then when I called set hits in the board func,\r\n    // it would edit the random numbers as well\r\n\r\n    const compGuess = [options[Math.floor(Math.random() *(5))][Math.floor(Math.random() *(5))]\r\n                        ,options[Math.floor(Math.random() *(5))][Math.floor(Math.random() *(5))]\r\n                        ,options[Math.floor(Math.random() *(5))][Math.floor(Math.random() *(5))]\r\n                        ,options[Math.floor(Math.random() *(5))][Math.floor(Math.random() *(5))]\r\n                        ,options[Math.floor(Math.random() *(5))][Math.floor(Math.random() *(5))]\r\n                    ];\r\n\r\n    const[computerGuess,setComputerGuess] = useState(compGuess);\r\n\r\n    const [misses,setMisses] = useState(0);\r\n    const [hits,setHits] = useState(0);\r\n    const [sank,setSank] = useState(0);\r\n\r\n    const [hitsArr,setHitsArr] = useState([]);\r\n\r\n    console.log(`compguess = ${compGuess}`);\r\n\r\n    console.log(`hits = ${hits}`);\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n\r\n                <Col>\r\n\r\n                <Board theOptions={options} theCompGuesses={computerGuess} updateHits={setHits} updateSank={setSank} updateMisses={setMisses} numHits={hits} numMisses={misses} numSank={sank} updateHitArr={setHitsArr} theHitsArr={hitsArr}/>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row style={{textAlign: \"center\"}}>\r\n                <Col>\r\n\r\n                    <Badge bg=\"primary\" id=\"missesBadge\">Misses : {misses}</Badge>\r\n\r\n                </Col>\r\n                <Col>\r\n\r\n                    <Badge bg=\"primary\" id=\"hitsbadge\">Hits : {hits}</Badge>\r\n\r\n                </Col>\r\n                <Col>\r\n\r\n                    <Badge bg=\"primary\" id=\"sankBadge\">[TO BE IMPLEMENTED]Sank : {sank}</Badge>\r\n\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n                <Col>\r\n\r\n                    <NavigationButton/>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nReactDOM.render(\r\n\r\n    <React.StrictMode>\r\n\r\n        <MainPage />\r\n\r\n    </React.StrictMode>, document.getElementById('root')\r\n\r\n);"],"sourceRoot":""}